name: 编译vnt

on:
  workflow_dispatch:
    inputs:
      tag:
        description: '发布prerelease的版本号'
        required: true
        default: '9.9.9'
      branch:
        description: '编译vnt-cli的vnt-dev/vnt分支，默认主分支main'
        required: true
        default: '1.2.x'
      cmd:
        description: '编译vnt-cli的额外模块参数默认只有openssl-vendored 需要的直接填,websocket'
        required: false
        default: ',wss'

env:
  CARGO_TERM_COLOR: always
  TZ: Asia/Shanghai
  tag: "${{ github.event.inputs.tag }}"
  branch: "${{ github.event.inputs.branch }}"
  cmd: "${{ github.event.inputs.cmd }}"
permissions:
  contents: write
  actions: write  
jobs:
 build:
    strategy:
      fail-fast: false
      matrix:
        include:
          
          - TARGET: Android-VntAPP
            OS: ubuntu-latest
            
          - TARGET: Windows-VntAPP
            OS: windows-latest
            
    runs-on: ${{ matrix.OS }}
    env:
      NAME: vnt-cli_${{ matrix.TARGET }}
      TARGET: ${{ matrix.TARGET }}
      OS: ${{ matrix.OS }}
      STRIP: ${{ matrix.STRIP }}
      FEATURES: ${{ matrix.FEATURES }}
    steps:
      - name: 设置Flutter环境
        if: ${{ endsWith(matrix.target, 'VntAPP') }}
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          #flutter-version: 3.27.4
      - name: 设置JDK环境
        if: ${{ startsWith(matrix.target, 'Android') }}
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17
      - name: 设置NDK环境
        if: ${{ startsWith(matrix.target, 'Android') }}
        run: |
           wget -q https://dl.google.com/android/repository/android-ndk-r26d-linux.zip
           unzip -q android-ndk-r26d-linux.zip -d /opt/ndk
      - name: 设置cargo环境
        if: ${{ startsWith(matrix.target, 'Android') }}
        run: |
           rustup target add aarch64-linux-android
           rustup target add armv7-linux-androideabi
           rustup target add x86_64-linux-android
           rustup target add i686-linux-android
      - name: 构建 Windows vntAPP
        if: ${{ startsWith(matrix.target, 'Windows') }}
        shell: bash
        run: |
          git clone https://github.com/vnt-dev/VntApp -b flutter C:/vnt
          cd C:/vnt
          rm -f C:/vnt/rust/Cargo.lock
          #修改vnt-cli核心源码版本
          sed -i 's/1\.2\.x/${{ github.event.inputs.branch }}/g' C:/vnt/rust/Cargo.toml
          #修改APP内版本号
          sed -i 's/1\.2\.11-预发布版/${{ github.event.inputs.tag }}/g' C:/vnt/lib/about_page.dart
          
          sed -i '0,/local_ipv4,/s/local_ipv4,/local_ipv4.map(|ip| ip.to_string()),/' C:/vnt/rust/src/api/vnt_api.rs
          sed -i '/ErrorType::Unknown => RustErrorType::Unknown,/a\    _ => RustErrorType::Unknown,' C:/vnt/rust/src/api/vnt_api.rs
          
          flutter pub get
          flutter upgrade
          flutter build windows --release -v
          echo "构建完成，开始列出生成的文件"
          ls -l "C:/vnt/build/windows/x64/runner/Release"
          cd C:/vnt/build/windows/x64/runner/Release
          mkdir -p C:/opt/upx
          "C:\Program Files\7-Zip\7z.exe" a C:/opt/upx/Windows-VntAPP.zip C:/vnt/build/windows/x64/runner/Release/*

          
      - name: 构建安卓APK
        if: ${{ startsWith(matrix.target, 'Android') }}
        run: |
         git clone https://github.com/vnt-dev/VntApp -b flutter /opt/vnt
         cd /opt/vnt
         rm -f rust/Cargo.lock
         sed -i '0,/local_ipv4,/s/local_ipv4,/local_ipv4.map(|ip| ip.to_string()),/' rust/src/api/vnt_api.rs
         sed -i '/ErrorType::Unknown => RustErrorType::Unknown,/a\    _ => RustErrorType::Unknown,' rust/src/api/vnt_api.rs
         sudo apt install ninja-build libgtk-3-dev
         #删除android-34
         #rm -rf /usr/local/lib/android/sdk/platforms/android-34 || true
         #rm -rf /usr/local/lib/android/sdk/build-tools/34.0.0 || true
         #rm -rf /usr/local/lib/android/sdk/build-tools/34.0.1 || true
         #设置路径安装特地版本tool
         export PATH=$PATH:/usr/local/lib/android/sdk/cmdline-tools/latest/bin
         #sdkmanager "platforms;android-35" "build-tools;35.0.0" || true
          
         #修改APP内版本
         sed -i "s/1.2.11-预发布版/${{ github.event.inputs.tag }}/g" ./lib/about_page.dart
         sed -i "s|1.2.13|${{ github.event.inputs.tag }}|" ./android/app/build.gradle

         #跟随flutter版本依赖版本的更新迭代版本也相应升级
         #sed -i "s|1.7.10|1.9.0|" ./android/settings.gradle
         #sed -i "s|7.3.0|8.1.0|" ./android/settings.gradle
         sed -i 's|7.6.3|8.0|' ./android/gradle/wrapper/gradle-wrapper.properties
         sed -i 's|7.3|8.1|' ./rust_builder/android/build.gradle
         #sed -i 's|19|21|' ./rust_builder/android/build.gradle
         sed -i 's|flutter.compileSdkVersion|34|' ./android/app/build.gradle
         sed -i 's|flutter.targetSdkVersion|34|' ./android/app/build.gradle
         echo '
          buildscript {
            dependencies {
              classpath "com.android.tools.build:gradle:7.3.0"  
            }
          }
          ' >> ./android/build.gradle
          
         echo "开始构建"
         flutter clean
         flutter doctor -v
         flutter pub get
         flutter pub upgrade --no-upgrade
         flutter build apk --release -v
         find /opt/vnt -type f -name "*.apk"
         
         mkdir -p /opt/vntAPP
         mv -f /opt/vnt/build/app/outputs/flutter-apk/app-release.apk /opt/vntAPP/app-release.apk
         
         cd /opt/vntAPP
         #生成签名文件keystore.jks 签名密码设置为password 可以自定义修改密码
         password=password
         keytool -genkey -v -keystore keystore.jks -storepass $password -alias key -keypass $password -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android, OU=Android, O=Android, L=BeiJing, ST=BeiJing, C=CN"
         #启用谷歌v1 v2 v3 v4 签名方式同时签名
         /usr/local/lib/android/sdk/build-tools/35.0.0/apksigner sign --ks keystore.jks --ks-key-alias key --ks-pass pass:$password --key-pass pass:$password --out vntApp-android.apk --in app-release.apk --v1-signing-enabled true --v2-signing-enabled true --v3-signing-enabled true --v4-signing-enabled true
         rm app-release.apk
         mkdir -p /opt/upx
         cp -f vntApp-android.apk /opt/upx/Android-VntAPP.apk
         
         echo "build_time=$(date '+%Y年%m月%d日%H:%M:%S' | jq -sRr @uri)" >> $GITHUB_ENV
     
      - name: 设置上传路径
        run: echo "UPLOAD_PATH=$(if [[ $RUNNER_OS == 'Linux' ]]; then echo '/opt/upx/*'; else echo 'C:/opt/upx/*'; fi)" >> $GITHUB_ENV
        shell: bash
      - name: 发布
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
           > ### ![](https://img.shields.io/badge/%E7%BC%96%E8%AF%91%E6%97%B6%E9%97%B4-${{ env.build_time }}-8267?logo=github&labelColor=%E9%A1%BB)![](https://img.shields.io/github/downloads/${{ github.repository }}/${{ env.tag }}/total?label=%E4%B8%8B%E8%BD%BD%E6%AC%A1%E6%95%B0&logo=github)![](https://img.shields.io/docker/image-size/lmq8267/vnt/${{ env.tag }}?label=%E9%95%9C%E5%83%8F%E5%A4%A7%E5%B0%8F&link=https%3A%2F%2Fhub.docker.com%2Fr%2Flmq8267%2Fvnt&logo=docker)
           
           这是预发布版本，各平台的压缩版程序
           
           -musleabi：只支持软件浮点的设备
           -musleabihf：支持硬件浮点的设备
           
           [官方更新说明](https://github.com/vnt-dev/vnt/releases)
           
          tag_name: ${{ env.tag }}
          prerelease: true
          files: ${{ env.UPLOAD_PATH }}
